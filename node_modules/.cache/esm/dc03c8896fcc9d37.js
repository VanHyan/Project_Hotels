let DataTypes,Model,db,Hotels;_6fc‍.x([["default",()=>_6fc‍.o]]);_6fc‍.w("sequelize",[["DataTypes",["DataTypes"],function(v){DataTypes=v}],["Model",["Model"],function(v){Model=v}]]);_6fc‍.w("../services/db",[["default",["db"],function(v){db=v}]]);_6fc‍.w("./Hotels",[["default",["Hotels"],function(v){Hotels=v}]]);



class HotelRooms extends Model {

}
HotelRooms.init({
  id: {
    type: DataTypes.BIGINT.UNSIGNED,
    autoIncrement: true,
    primaryKey: true,
  },
  price: {
    type: DataTypes.INTEGER,
    required: true,
  },
  roomCount: {
    type: DataTypes.INTEGER,
    required: true,
  },
  status: {
    type: DataTypes.STRING,
    required: true,
    default: 'free',
  },

}, {
  tableName: 'rooms',
  modelName: 'rooms',
  sequelize: db,
  timestamps: false,
});

HotelRooms.belongsTo(Hotels, {
  as: 'hotels',
  foreignKey: 'hotelId',
  onUpdate: 'cascade',
  onDelete: 'cascade',
});
Hotels.hasMany(HotelRooms, {
  as: 'room',
  foreignKey: 'hotelId',
  onUpdate: 'cascade',
  onDelete: 'cascade',
});
_6fc‍.d(HotelRooms);

let DataTypes,Model,Hotels,HotelRooms,db;_6fc‍.x([["default",()=>_6fc‍.o]]);_6fc‍.w("sequelize",[["DataTypes",["DataTypes"],function(v){DataTypes=v}],["Model",["Model"],function(v){Model=v}]]);_6fc‍.w("./Hotels",[["default",["Hotels"],function(v){Hotels=v}]]);_6fc‍.w("./HotelRooms",[["default",["HotelRooms"],function(v){HotelRooms=v}]]);_6fc‍.w("../services/db",[["default",["db"],function(v){db=v}]]);




class Photo extends Model {

}

Photo.init({
  id: {
    type: DataTypes.BIGINT.UNSIGNED,
    autoIncrement: true,
    primaryKey: true,
  },
  url: {
    type: DataTypes.STRING,
    required: true,
  },
}, {
  tableName: 'photo',
  modelName: 'photo',
  sequelize: db,
  timestamps: false,
});

Photo.belongsTo(Hotels, {
  as: 'hotels',
  foreignKey: 'hotelId',
  onUpdate: 'cascade',
  onDelete: 'cascade',
});
Hotels.hasMany(Photo, {
  as: 'photo',
  foreignKey: 'hotelId',
  onUpdate: 'cascade',
  onDelete: 'cascade',
});
Photo.belongsTo(HotelRooms, {
  as: 'room',
  foreignKey: 'roomId',
  onUpdate: 'cascade',
  onDelete: 'cascade',
});
HotelRooms.hasMany(Photo, {
  as: 'photo',
  foreignKey: 'roomId',
  onUpdate: 'cascade',
  onDelete: 'cascade',
});

_6fc‍.d(Photo);
